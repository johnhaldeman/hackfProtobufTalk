// Code generated by protoc-gen-go.
// source: httpmonitorroto.proto
// DO NOT EDIT!

/*
Package monitor_http is a generated protocol buffer package.

It is generated from these files:
	httpmonitorroto.proto

It has these top-level messages:
	HttpRequest
*/
package monitor_http

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HttpRequest struct {
	Timestamp            *int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Hostname             *string `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	ServerName           *string `protobuf:"bytes,3,opt,name=server_name,json=serverName" json:"server_name,omitempty"`
	ServerIp             *string `protobuf:"bytes,4,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	Protocol             *string `protobuf:"bytes,5,opt,name=protocol" json:"protocol,omitempty"`
	HttpUser             *string `protobuf:"bytes,6,opt,name=http_user,json=httpUser" json:"http_user,omitempty"`
	Method               *string `protobuf:"bytes,7,opt,name=method" json:"method,omitempty"`
	Resource             *string `protobuf:"bytes,8,opt,name=resource" json:"resource,omitempty"`
	Query                *string `protobuf:"bytes,9,opt,name=query" json:"query,omitempty"`
	FullRequest          *string `protobuf:"bytes,10,opt,name=full_request,json=fullRequest" json:"full_request,omitempty"`
	HttpCode             *int32  `protobuf:"varint,11,opt,name=http_code,json=httpCode" json:"http_code,omitempty"`
	ConnStatus           *string `protobuf:"bytes,12,opt,name=conn_status,json=connStatus" json:"conn_status,omitempty"`
	ContentSize          *int64  `protobuf:"varint,13,opt,name=content_size,json=contentSize" json:"content_size,omitempty"`
	TimeToServe          *string `protobuf:"bytes,14,opt,name=time_to_serve,json=timeToServe" json:"time_to_serve,omitempty"`
	HeaderReferer        *string `protobuf:"bytes,15,opt,name=header_referer,json=headerReferer" json:"header_referer,omitempty"`
	HeaderUserAgent      *string `protobuf:"bytes,16,opt,name=header_user_agent,json=headerUserAgent" json:"header_user_agent,omitempty"`
	HeaderAccept         *string `protobuf:"bytes,17,opt,name=header_accept,json=headerAccept" json:"header_accept,omitempty"`
	HeaderAcceptLanguage *string `protobuf:"bytes,18,opt,name=header_accept_language,json=headerAcceptLanguage" json:"header_accept_language,omitempty"`
	File                 *string `protobuf:"bytes,19,opt,name=file" json:"file,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *HttpRequest) Reset()                    { *m = HttpRequest{} }
func (m *HttpRequest) String() string            { return proto.CompactTextString(m) }
func (*HttpRequest) ProtoMessage()               {}
func (*HttpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HttpRequest) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *HttpRequest) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *HttpRequest) GetServerName() string {
	if m != nil && m.ServerName != nil {
		return *m.ServerName
	}
	return ""
}

func (m *HttpRequest) GetServerIp() string {
	if m != nil && m.ServerIp != nil {
		return *m.ServerIp
	}
	return ""
}

func (m *HttpRequest) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

func (m *HttpRequest) GetHttpUser() string {
	if m != nil && m.HttpUser != nil {
		return *m.HttpUser
	}
	return ""
}

func (m *HttpRequest) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *HttpRequest) GetResource() string {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return ""
}

func (m *HttpRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *HttpRequest) GetFullRequest() string {
	if m != nil && m.FullRequest != nil {
		return *m.FullRequest
	}
	return ""
}

func (m *HttpRequest) GetHttpCode() int32 {
	if m != nil && m.HttpCode != nil {
		return *m.HttpCode
	}
	return 0
}

func (m *HttpRequest) GetConnStatus() string {
	if m != nil && m.ConnStatus != nil {
		return *m.ConnStatus
	}
	return ""
}

func (m *HttpRequest) GetContentSize() int64 {
	if m != nil && m.ContentSize != nil {
		return *m.ContentSize
	}
	return 0
}

func (m *HttpRequest) GetTimeToServe() string {
	if m != nil && m.TimeToServe != nil {
		return *m.TimeToServe
	}
	return ""
}

func (m *HttpRequest) GetHeaderReferer() string {
	if m != nil && m.HeaderReferer != nil {
		return *m.HeaderReferer
	}
	return ""
}

func (m *HttpRequest) GetHeaderUserAgent() string {
	if m != nil && m.HeaderUserAgent != nil {
		return *m.HeaderUserAgent
	}
	return ""
}

func (m *HttpRequest) GetHeaderAccept() string {
	if m != nil && m.HeaderAccept != nil {
		return *m.HeaderAccept
	}
	return ""
}

func (m *HttpRequest) GetHeaderAcceptLanguage() string {
	if m != nil && m.HeaderAcceptLanguage != nil {
		return *m.HeaderAcceptLanguage
	}
	return ""
}

func (m *HttpRequest) GetFile() string {
	if m != nil && m.File != nil {
		return *m.File
	}
	return ""
}

func init() {
	proto.RegisterType((*HttpRequest)(nil), "monitor.http.http_request")
}

func init() { proto.RegisterFile("httpmonitorroto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x6f, 0xd4, 0x30,
	0x10, 0xc5, 0xb5, 0x74, 0xb7, 0x74, 0x27, 0xd9, 0x96, 0x9a, 0x52, 0x8d, 0x00, 0x89, 0xa5, 0x08,
	0x69, 0xc5, 0xa1, 0x27, 0xbe, 0x40, 0xc5, 0x09, 0x09, 0x71, 0xc8, 0xc2, 0xd9, 0xb2, 0x92, 0xd9,
	0x4d, 0xa4, 0xc4, 0x4e, 0xed, 0x09, 0x12, 0xfb, 0xb5, 0xf9, 0x02, 0xc8, 0x63, 0x87, 0x3f, 0x17,
	0xcb, 0xf3, 0x7b, 0x6f, 0xec, 0xa7, 0x07, 0x2f, 0x5a, 0xe6, 0x71, 0x70, 0xb6, 0x63, 0xe7, 0xbd,
	0x63, 0x77, 0x3f, 0xc6, 0x53, 0x95, 0x19, 0xdd, 0x47, 0xf9, 0xee, 0xd7, 0x12, 0xca, 0x78, 0xd1,
	0x9e, 0x1e, 0x27, 0x0a, 0xac, 0x5e, 0xc3, 0x9a, 0xbb, 0x81, 0x02, 0x9b, 0x61, 0xc4, 0xc5, 0x76,
	0xb1, 0x3b, 0xab, 0xfe, 0x02, 0xf5, 0x12, 0x2e, 0x5a, 0x17, 0xd8, 0x9a, 0x81, 0xf0, 0xc9, 0x76,
	0xb1, 0x5b, 0x57, 0x7f, 0x66, 0xf5, 0x06, 0x8a, 0x40, 0xfe, 0x07, 0x79, 0x2d, 0xf2, 0x99, 0xc8,
	0x90, 0xd0, 0xd7, 0x68, 0x78, 0x05, 0xeb, 0x6c, 0xe8, 0x46, 0x5c, 0xa6, 0xed, 0x04, 0x3e, 0xcb,
	0xcb, 0x92, 0xaf, 0x76, 0x3d, 0xae, 0x92, 0x36, 0xcf, 0x71, 0x51, 0x32, 0x4e, 0x81, 0x3c, 0x9e,
	0xe7, 0x6f, 0x99, 0xc7, 0xef, 0x81, 0xbc, 0xba, 0x85, 0xf3, 0x81, 0xb8, 0x75, 0x0d, 0x3e, 0x15,
	0x25, 0x4f, 0xf1, 0x41, 0x4f, 0xc1, 0x4d, 0xbe, 0x26, 0xbc, 0x48, 0x3b, 0xf3, 0xac, 0x6e, 0x60,
	0xf5, 0x38, 0x91, 0xff, 0x89, 0x6b, 0x11, 0xd2, 0xa0, 0xde, 0x42, 0x79, 0x98, 0xfa, 0x7e, 0xae,
	0x02, 0x41, 0xc4, 0x22, 0xb2, 0x2a, 0xb7, 0x33, 0x27, 0xa9, 0x5d, 0x43, 0x58, 0x6c, 0x17, 0xbb,
	0x55, 0x4a, 0xf2, 0xc9, 0x35, 0x52, 0x40, 0xed, 0xac, 0xd5, 0x81, 0x0d, 0x4f, 0x01, 0xcb, 0x54,
	0x40, 0x44, 0x7b, 0x21, 0xf1, 0x83, 0xda, 0x59, 0x26, 0xcb, 0x3a, 0x74, 0x27, 0xc2, 0x8d, 0xd4,
	0x5b, 0x64, 0xb6, 0xef, 0x4e, 0xa4, 0xee, 0x60, 0x13, 0xdb, 0xd6, 0xec, 0xb4, 0x54, 0x83, 0x97,
	0x29, 0x44, 0x84, 0xdf, 0xdc, 0x3e, 0x22, 0xf5, 0x1e, 0x2e, 0x5b, 0x32, 0x0d, 0x79, 0xed, 0xe9,
	0x40, 0x9e, 0x3c, 0x5e, 0x89, 0x69, 0x93, 0x68, 0x95, 0xa0, 0xfa, 0x00, 0xd7, 0xd9, 0x16, 0x7b,
	0xd3, 0xe6, 0x48, 0x96, 0xf1, 0x99, 0x38, 0xaf, 0x92, 0x10, 0xfb, 0x7b, 0x88, 0x58, 0xbd, 0x83,
	0xbc, 0xac, 0x4d, 0x5d, 0xd3, 0xc8, 0x78, 0x2d, 0xbe, 0x32, 0xc1, 0x07, 0x61, 0xea, 0x23, 0xdc,
	0xfe, 0x67, 0xd2, 0xbd, 0xb1, 0xc7, 0xc9, 0x1c, 0x09, 0x95, 0xb8, 0x6f, 0xfe, 0x75, 0x7f, 0xc9,
	0x9a, 0x52, 0xb0, 0x3c, 0x74, 0x3d, 0xe1, 0x73, 0xf1, 0xc8, 0xfd, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x88, 0xd0, 0xe9, 0x5c, 0x9b, 0x02, 0x00, 0x00,
}
